---
import { getCollection, getEntry, render } from "astro:content";
import slugify from "../../helpers/slugify";
import Gallery from "../../components/Gallery.astro";
import { Image } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import Button from "../../components/Button.astro";
export const getStaticPaths = async () => {
  const allPeople = await getCollection("people");
  return allPeople.map((item) => ({
    params: { slug: slugify(item.data.title) },
  }));
};
const projectSlug = Astro.params.slug;
const collection = await getCollection("people");
const entry = collection.find(
  (item) => slugify(item.data.title) === projectSlug
);
if (!entry) {
  throw new Error(`Project not found for slug: ${projectSlug}`);
}
const { Content } = await render(entry);
const names = entry.data.name.split(" ");
const lastName = names.pop();
const firstName = names.join(" ");
---

<Layout pageTitle={entry.data.title}>
  <div class="project-page-wrapper">
    <main class="project-main-wrapper">
      <div class="project-main">
        <Image
          transition:name={`thumb-${projectSlug}`}
          alt={entry.data.thumbnail.alt}
          src={entry.data.thumbnail.src}
        />
        <h1 class="project-title">{entry.data.title}</h1>
        <div class="project-content">
          <Content />
        </div>

        <Gallery images={entry.data.images} />
      </div>
    </main>
    <aside class="project-sidebar">
      <Image
        class="sidebar-img"
        src={entry.data.headshot}
        alt={entry.data.name}
        transition:name={`photo-${entry.id}`}
      />
      <div class="sidebar-text-panel">
        <h2 class="person-name">
          {firstName}
          <span class="star-after">{lastName}</span>
        </h2>
        <div class="button-group">
          <Button compact color="accent-c" href={`/designers/${entry.id}`}
            >About <span class="star-after">Me</span></Button
          >
          {
            entry.data.portfolio && (
              <Button compact href={entry.data.portfolio} color="accent-b">
                <span class="star-after">Portfolio</span>
              </Button>
            )
          }
        </div>
      </div>
    </aside>
  </div>
</Layout>

<style>
  .project-sidebar {
    padding: 0 2rem;
    display: flex;
    justify-content: center;
    gap: 2rem;
  }
  .sidebar-img {
    max-width: 144px;
    height: auto;
    align-self: center;
  }
  .person-name {
    font-size: 1.5rem;
    font-weight: 400;
    font-family: "Sligoil", serif;
    margin-top: 1rem;
    margin-bottom: 1rem;
  }
  .button-group {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .project-content {
    font-family: sans-serif;
    font-size: 1rem;
    margin-bottom: 2rem;
    padding: 0 2rem;
  }
  .project-title {
    font-size: 2rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
    padding: 0 1rem;
    font-weight: 400;
    font-family: "Sligoil", serif;
  }

  .project-page-wrapper {
    position: relative;
  }

  .project-main-wrapper {
    padding-top: var(--size-page-margin);
    padding-bottom: var(--size-page-margin);
  }
  .project-sidebar {
    padding-bottom: var(--size-page-margin);
  }
  @media screen and (min-width: 768px) {
    .project-page-wrapper {
      display: flex;
      gap: 0rem;
      overflow: visible;
    }
    .project-title {
      font-size: 3rem;
      margin-top: 4rem;
      margin-bottom: 2rem;
    }
    .project-content {
      max-width: 45rem;
      padding-left: 8rem;
      margin-bottom: 4rem;
    }
    .project-sidebar {
      width: 300px;
      order: 1;
      flex-grow: 0;
      top: 0;
      position: sticky;
      align-self: flex-start;
      flex-direction: column;
      padding-top: var(--size-page-margin);
    }
    .project-main-wrapper {
      order: 2;
      flex: 1;
    }

    .sidebar-img {
      max-width: 100%;
    }

    .project-main {
      max-width: 1000px;
    }
  }
</style>
